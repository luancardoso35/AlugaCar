import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 * Classe que cria um formulário para a adição de novos objetos do tipo Cliente, através das
 * informações dadas a partir dos campos de texto.
 * 
 * @author Luan
 * @author Matheo
 */
public class FormularioCliente extends javax.swing.JFrame {

    /**
     * Construtor da classe FormularioFuncionario
     * Creates new form FormularioFuncionario
     */
    public FormularioCliente() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabelNome = new javax.swing.JLabel();
        jLabelNascimento = new javax.swing.JLabel();
        jLabelDocumento = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabelTelefone = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jTextFieldTelefone = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter telefone= new javax.swing.text.MaskFormatter("(##)#####-####");
            jTextFieldTelefone = new javax.swing.JFormattedTextField(telefone);
        }
        catch (Exception e){
        }
        jTextFieldCPF = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter cpf= new javax.swing.text.MaskFormatter("###.###.###-##");
            jTextFieldCPF = new javax.swing.JFormattedTextField(cpf);
        }
        catch (Exception e){
        }
        jTextFieldNascimento = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("##/##/####");
            jTextFieldNascimento = new javax.swing.JFormattedTextField(data);
        }
        catch (Exception e){
        }
        jLabelSexo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEndereco = new javax.swing.JTextField();
        jButtonSair = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(760, 490));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(760, 490));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jLabelNome.setText("Nome:");
        jPanel1.add(jLabelNome);
        jLabelNome.setBounds(50, 50, 51, 23);

        jLabelNascimento.setText("Data de Nascimento:");
        jPanel1.add(jLabelNascimento);
        jLabelNascimento.setBounds(50, 180, 120, 23);

        jLabelDocumento.setText("Número de CPF: ");
        jPanel1.add(jLabelDocumento);
        jLabelDocumento.setBounds(50, 140, 119, 23);

        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(480, 350, 80, 40);

        jLabelTelefone.setText("Telefone: ");
        jPanel1.add(jLabelTelefone);
        jLabelTelefone.setBounds(50, 90, 60, 23);

        jTextFieldNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldNome);
        jTextFieldNome.setBounds(120, 50, 180, 30);

        jTextFieldTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTelefoneActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldTelefone);
        jTextFieldTelefone.setBounds(120, 90, 180, 30);
        jPanel1.add(jTextFieldCPF);
        jTextFieldCPF.setBounds(150, 140, 160, 30);

        jTextFieldNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNascimentoActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldNascimento);
        jTextFieldNascimento.setBounds(190, 180, 120, 30);

        jLabelSexo.setText("Sexo: ");
        jPanel1.add(jLabelSexo);
        jLabelSexo.setBounds(50, 220, 50, 14);

        jLabel3.setText("Endereço:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(50, 260, 81, 14);

        jTextFieldEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEnderecoActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldEndereco);
        jTextFieldEndereco.setBounds(140, 260, 209, 30);

        jButtonSair.setText("Voltar");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSair);
        jButtonSair.setBounds(600, 350, 80, 40);

        jLabel4.setText("Email");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(50, 300, 36, 23);

        jTextFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldEmail);
        jTextFieldEmail.setBounds(140, 300, 209, 30);

        jRadioButton1.setBackground(new java.awt.Color(102, 102, 102));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Masculino");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton1);
        jRadioButton1.setBounds(140, 220, 100, 23);

        jRadioButton2.setBackground(new java.awt.Color(102, 102, 102));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Feminino");
        jPanel1.add(jRadioButton2);
        jRadioButton2.setBounds(240, 220, 100, 23);

        jPanel2.add(jPanel1);
        jPanel1.setBounds(20, 50, 720, 420);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Cadastro de clientes");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(300, 0, 170, 30);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(0, 0, 760, 30);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 760, 490);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNascimentoActionPerformed

    /**
     * Método que confere se a diferença entre data atual e a data recebida como parâmetro está entre 18 e 130 anos
     * (18 anos é a data mínima para dirigir, e 130 é um número de anos limite para uma pessoa no sistema)
     * @param data uma data
     * @return se a a diferença de anos entre a data atual e a passada como parâmetro está entre 18 e 130 anos
     */
    protected static boolean confereData (Date data)
    {
        Date hoje = new Date();
        long diff;
        diff = ((ChronoUnit.DAYS.between(data.toInstant(), hoje.toInstant())) / 365);
        if (diff <= 130 && diff >= 18)
        {
            return true;
        }
        else {
            return false;
        }
    }
    
    private void jTextFieldTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTelefoneActionPerformed

    /**
     * Método que, após verificar se o CPF e a data de nascimento informados são válidos, cria um novo objeto do tipo
     * Cliente e adiciona tal Cliente à lista de clientes, verificando também se este 
     * não foi previamente adicionado, através de seu CPF 
     * @param evt seleção do botão Salvar
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int flag = 0; 
        try{
            if (jRadioButton1.isSelected() || jRadioButton2.isSelected())
                {
                    if (validarData(jTextFieldNascimento.getText()) && confereData(new SimpleDateFormat("dd/MM/yyyy").parse(jTextFieldNascimento.getText())))
                    {
                        if (validarCPF(jTextFieldCPF.getText()))
                        {
                            for (int i = 0; i < ListaClientes.listaClientes.size(); i++)
                            {
                                if (jTextFieldCPF.getText().equals(ListaClientes.listaClientes.get(i).getDocumento()))
                                {
                                    JOptionPane.showMessageDialog(null,"CPF já cadastrado.","Aviso",JOptionPane.WARNING_MESSAGE);
                                    flag++;
                                    jTextFieldNome.setText("");
                                    jTextFieldTelefone.setText("");
                                    jTextFieldCPF.setText("");
                                    jTextFieldNascimento.setText("");
                                    jTextFieldEndereco.setText("");
                                    buttonGroup1.clearSelection();
                                    jTextFieldEmail.setText("");
                                }
                            }
                            if (flag == 0)
                            {
                                if (jRadioButton1.isSelected())
                                {
                                    Cliente objF = new Cliente (jTextFieldNome.getText(), jTextFieldTelefone.getText(), jTextFieldCPF.getText(), jTextFieldNascimento.getText(), "Masculino", jTextFieldEmail.getText(), jTextFieldEndereco.getText());
                                    ListaClientes.listaClientes.add(objF);
                                    JOptionPane.showMessageDialog(this, "Cliente cadastrado com sucesso!"); 
                                } else {
                                    Cliente objF = new Cliente (jTextFieldNome.getText(), jTextFieldTelefone.getText(), jTextFieldCPF.getText(), jTextFieldNascimento.getText(), "Feminino", jTextFieldEmail.getText(), jTextFieldEndereco.getText());
                                    ListaClientes.listaClientes.add(objF);
                                    JOptionPane.showMessageDialog(this, "Cliente cadastrado com sucesso!"); 
                                }
                                jTextFieldNome.setText("");
                                jTextFieldTelefone.setText("");
                                jTextFieldCPF.setText("");
                                jTextFieldNascimento.setText("");
                                jTextFieldEndereco.setText("");
                                buttonGroup1.clearSelection();
                                jTextFieldEmail.setText("");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null,"CPF inválido","Aviso",JOptionPane.WARNING_MESSAGE);
                            jTextFieldCPF.setText("");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null,"Data de nascimento inválida.","Aviso",JOptionPane.WARNING_MESSAGE);
                            jTextFieldNascimento.setText("");
                    }
                } else {
                    JOptionPane.showMessageDialog(null,"Selecione uma opção para o sexo.","Aviso",JOptionPane.WARNING_MESSAGE);
                } 
        }catch(ParseException pe){
            System.err.println(pe);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Método que verifica se o CPF informado é válido
     * @param cpf CPF informado
     * @return se o CPF é válido ou não
     */
    public static boolean validarCPF(String cpf)
    {
        if (String.valueOf(cpf.charAt(0)).equals(String.valueOf(cpf.charAt(1))) && String.valueOf(cpf.charAt(1)).equals(String.valueOf(cpf.charAt(2))) && String.valueOf(cpf.charAt(2)).equals(String.valueOf(cpf.charAt(4))) && String.valueOf(cpf.charAt(4)).equals(String.valueOf(cpf.charAt(5))) && String.valueOf(cpf.charAt(5)).equals(String.valueOf(cpf.charAt(6))) && String.valueOf(cpf.charAt(6)).equals(String.valueOf(cpf.charAt(8))) && String.valueOf(cpf.charAt(8)).equals(String.valueOf(cpf.charAt(9))) && String.valueOf(cpf.charAt(9)).equals(String.valueOf(cpf.charAt(10))) && String.valueOf(cpf.charAt(10)).equals(String.valueOf(cpf.charAt(12))) && String.valueOf(cpf.charAt(12)).equals(String.valueOf(cpf.charAt(13))))
        {
            return false;
        }
        int valor = 0;
        int valor2 = 0;
        int soma = 0;
        int soma2 = 0;
        for (int i = 0; i < 9; i++) 
        {
            if (i < 3) {
                soma += Integer.parseInt(String.valueOf(cpf.charAt(i))) * (10 - i);
            }
            else if (i >= 3 && i < 6) {
                soma += Integer.parseInt(String.valueOf(cpf.charAt(i + 1))) * (10 - i);
            }
            else if (i >= 6) {
                soma += Integer.parseInt(String.valueOf(cpf.charAt(i + 2))) * (10 - i);
            }
        }
        valor = 11 - (soma % 11);
        if (valor > 9) {
            valor = 0;
        }
        
        for (int i = 0; i < 9; i++) 
        {
            if (i < 3) {
                soma2 += Integer.parseInt(String.valueOf(cpf.charAt(i))) * (11 - i);
            }
            else if (i >= 3 && i < 6) {
                soma2 += Integer.parseInt(String.valueOf(cpf.charAt(i + 1))) * (11 - i);
            }
            else if (i >= 6) {
                soma2 += Integer.parseInt(String.valueOf(cpf.charAt(i + 2))) * (11 - i);
            }
        }
        soma2 += valor * 2;
        
        valor2 = 11 - (soma2 % 11);
        if (valor2 > 9) 
        {
            valor2 = 0;
        }
        
        if (valor == Integer.parseInt(String.valueOf(cpf.charAt(12))) && valor2 == Integer.parseInt(String.valueOf(cpf.charAt(13))))
        {
            return true;
        }
        else {
            return false;
        }
    }
    
    /**
     * Método que verifica se a data possui formato e dados válidos
     * @param data a data informada
     * @return se a data é válida ou não
     */
    public static boolean validarData(String data) {
    	SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
    	try {
    		format.setLenient(false);
    		Date dataParse = format.parse(data);
                return true;
    	} catch (ParseException e) {
                return false;
    	}
    }
    
    private void jTextFieldNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeActionPerformed

    private void jTextFieldEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEnderecoActionPerformed

    /**
     * Método que fecha a tela
     * @param evt seleção do botão Sair
     */
    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jTextFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmailActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    /**
     * Método principal da classeFormularioCliente
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioFuncionario().setVisible(true);
            }
        });
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelDocumento;
    private javax.swing.JLabel jLabelNascimento;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelSexo;
    private javax.swing.JLabel jLabelTelefone;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTextFieldCPF;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldEndereco;
    private javax.swing.JTextField jTextFieldNascimento;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldTelefone;
    // End of variables declaration//GEN-END:variables
}
