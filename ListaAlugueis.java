import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;


/**
 * Classe que apresenta uma tela para a devolução de carros alugados.
 * 
 * @author Matheo
 */
public class ListaAlugueis extends javax.swing.JFrame {
    
    protected static ArrayList<AlugueisClasse> listaAlugueis = new ArrayList<AlugueisClasse>();
    private DefaultTableModel model;
    private Date data;
    private AlugueisClasse aluguel;
    
    /**
     * Método que carrega a tabela apresentada com os clientes que possuem
     * alugueis em aberto, seu nome e CPF, a marca, o modelo e o Renavam do carro
     * alugado, junto com a data de aluguel e a data estipulada de devolução.
     */
    private void carregarTabelaA()
    {
        DefaultTableModel localModel = (DefaultTableModel) tabelaAlugueis.getModel();
        
        for (AlugueisClasse objA : this.listaAlugueis)
        {
            Object[] row = new Object[6];
            row[0] = String.valueOf(objA.getNome());
            row[1] = String.valueOf(objA.getDocumento());
            row[2] = String.valueOf(objA.getMarca()+ " - " + objA.getModelo());
            row[3] = String.valueOf(objA.getRenavam());
            row[4] = String.valueOf(new SimpleDateFormat("dd/MM/yyyy").format(objA.getData()));
            row[5] = String.valueOf(new SimpleDateFormat("dd/MM/yyyy").format(objA.getDevolucao()));
            
            localModel.addRow(row);
        }
    }
   
    /**
     * Construtor da classe ListaAlugueis.
     * Creates new form ListaAlugueis
     */
    public ListaAlugueis() {
        
        initComponents();
        jPanel1.setVisible(true);
        carregarTabelaA(); 
        data = new Date();
        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
        jFormattedTextFieldData.setText(formatador.format(data));
    }
    
    /**
     * Método que inicializa o filtro para buscas na tabela de alugueis.
     * @param numero número que será buscado na tabela para filtrar as informações.
     */
    public void filtro(String numero){
        TableRowSorter<TableModel> trs = new TableRowSorter<>(tabelaAlugueis.getModel());
        tabelaAlugueis.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(numero, 1));
    }

    /**
     * Método que confere se o número de dias para as datas recebidas é maior que 
     * o número mínimo de dias para o aluguel do carro.
     * @param data data passada para o sistema.
     * @param dataAlug data do aluguel.
     * @return se o número de dias mínimos para o aluguel foi respeitado.
     */
    public boolean confereDiasMinimos(Date data, Date dataAlug){
        
        long dias = ChronoUnit.DAYS.between(dataAlug.toInstant(),data.toInstant());
        
        if((dias+1) >= aluguel.getDiasMinimos()){ 
            return true;
        }else{
            return false;
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAlugueis = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jFormattedTextFieldData = new javax.swing.JFormattedTextField();
        try{     javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("##/##/####");     jFormattedTextFieldData = new javax.swing.JFormattedTextField(data);  }     catch (Exception e){  }
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldDataAluguel = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldBusca = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lista de Alugueis");
        setMinimumSize(new java.awt.Dimension(699, 424));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(695, 456));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(null);

        tabelaAlugueis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cliente", "CPF", "Carro", "Renavam", "Data de Aluguel", "Data de Devolução"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaAlugueis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAlugueisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaAlugueis);
        if (tabelaAlugueis.getColumnModel().getColumnCount() > 0) {
            tabelaAlugueis.getColumnModel().getColumn(0).setResizable(false);
            tabelaAlugueis.getColumnModel().getColumn(1).setResizable(false);
            tabelaAlugueis.getColumnModel().getColumn(2).setResizable(false);
            tabelaAlugueis.getColumnModel().getColumn(3).setResizable(false);
            tabelaAlugueis.getColumnModel().getColumn(4).setResizable(false);
            tabelaAlugueis.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 80, 660, 180);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setPreferredSize(new java.awt.Dimension(695, 456));
        jPanel2.setLayout(null);

        jButton1.setText("Efetuar devolução");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(130, 100, 139, 34);

        jButton2.setText("Cancelar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(390, 100, 124, 34);

        jFormattedTextFieldData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldDataActionPerformed(evt);
            }
        });
        jPanel2.add(jFormattedTextFieldData);
        jFormattedTextFieldData.setBounds(450, 50, 96, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Data:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(410, 60, 70, 17);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Aluguel de:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(30, 20, 100, 17);
        jPanel2.add(jTextFieldNome);
        jTextFieldNome.setBounds(120, 10, 105, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Efetuado em:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(30, 60, 140, 17);
        jPanel2.add(jTextFieldDataAluguel);
        jTextFieldDataAluguel.setBounds(120, 50, 100, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(20, 270, 660, 140);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Devolução ");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(300, -4, 90, 40);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(0, 0, 700, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Busca por CPF: ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 50, 170, 17);

        jTextFieldBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBuscaKeyReleased(evt);
            }
        });
        jPanel1.add(jTextFieldBusca);
        jTextFieldBusca.setBounds(120, 40, 165, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 700, 424);

        setSize(new java.awt.Dimension(699, 424));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jFormattedTextFieldDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDataActionPerformed

    }//GEN-LAST:event_jFormattedTextFieldDataActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Método que filtra os alugueis da tabela segundo o CPF do cliente, informado no campo de texto.
     * @param evt ato de digitar algo no campo de texto.
     */
    private void jTextFieldBuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscaKeyReleased
        String cpf = jTextFieldBusca.getText();
        filtro(cpf);
    }//GEN-LAST:event_jTextFieldBuscaKeyReleased

    /**
     * Método que insere o nome do locatório e a data do aluguel em seus respectivos campos.
     * @param evt ato de selecionar uma das linhas da tabela.
     */
    private void tabelaAlugueisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAlugueisMouseClicked
        int index = tabelaAlugueis.getSelectedRow();
        aluguel = listaAlugueis.get(index);
        jTextFieldNome.setText(aluguel.getNome());
        jTextFieldDataAluguel.setText(new SimpleDateFormat("dd/MM/yyyy").format(aluguel.getData()));
    }//GEN-LAST:event_tabelaAlugueisMouseClicked

    /**
     * Método que, após conferir se os dias mínimos do aluguel foram atendidos, calcula a duração
     * do mesmo, e, caso a data de devolução tenha sido estipulada, calcula a multa que o cliente
     * deverá pagar. Após isso, o método gera um recibo em um arquivo PDF denominado "recibo.pdf",
     * contendo dados do locatório, do aluguel e o total a pagar.
     * @param evt ato de selecionar o botão "Efetuar Devolução".
     */
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try{
            Date dataFornecida = new SimpleDateFormat("dd/MM/yyyy").parse(jFormattedTextFieldData.getText());
            boolean flag = confereDiasMinimos(dataFornecida, aluguel.diaAluguel);
            DecimalFormat d = new DecimalFormat("#,##0.00");
        
            double preco;
            if(flag){
                Date dataDevol = aluguel.getDevolucao();
                Date dataAlug = aluguel.getData();

                long dias =  ChronoUnit.DAYS.between(dataDevol.toInstant(), dataFornecida.toInstant());

                if(dias <= 0){
                    
                    dias = ChronoUnit.DAYS.between(dataAlug.toInstant(), dataFornecida.toInstant());
                    preco = aluguel.getPreco() * (dias + 1);   

                    JOptionPane.showMessageDialog(this, "Total a pagar: R$"+ d.format(preco));
                    
                    for (int i = 0; i < ListaCarros.listaCarros.size(); i++)
                    {
                        if (aluguel.carro.getRenavam().equals(ListaCarros.listaCarros.get(i).getRenavam()))
                        {
                            ListaCarros.listaCarros.get(i).setIsAlugado();
                        }
                    }
                    
                    for (int j = 0; j < ListaClientes.listaClientes.size(); j++)
                    {
                        if (aluguel.cliente.getDocumento().equals(ListaClientes.listaClientes.get(j).getDocumento()))
                        {
                            ListaClientes.listaClientes.get(j).setAluguel();
                        }
                    }
                    ReciboPdf rPdf = new ReciboPdf(aluguel.getNome(), aluguel.getDocumento(), aluguel.getMarca(), aluguel.getModelo(), 
                            aluguel.getCor(), aluguel.getRenavam(),aluguel.getData(), dataFornecida, preco);
                    
                    listaAlugueis.remove(aluguel);
                    dispose();

                }else{
                    double multa = (dias) * aluguel.getMulta();

                    dias = ChronoUnit.DAYS.between(dataAlug.toInstant(), dataDevol.toInstant());

                    preco = (aluguel.getPreco() * (dias + 1)) + multa;

                    JOptionPane.showMessageDialog(this, "Atraso! \nMulta = R$" + d.format(multa) + "\nTotal = R$"+ d.format(preco));

                    
                    for (int i = 0; i < ListaCarros.listaCarros.size(); i++)
                    {
                        if (aluguel.carro.getRenavam().equals(ListaCarros.listaCarros.get(i).getRenavam()))
                        {
                            ListaCarros.listaCarros.get(i).setIsAlugado();
                        }
                    }
                    
                    for (int j = 0; j < ListaClientes.listaClientes.size(); j++)
                    {
                        if (aluguel.cliente.getDocumento().equals(ListaClientes.listaClientes.get(j).getDocumento()))
                        {
                            ListaClientes.listaClientes.get(j).setAluguel();
                        }
                    }
                    ReciboPdf rPdf = new ReciboPdf(aluguel.getNome(), aluguel.getDocumento(), aluguel.getMarca(), aluguel.getModelo(), 
                            aluguel.getCor(), aluguel.getRenavam(),aluguel.getData(), dataFornecida, preco);
                    
                    listaAlugueis.remove(aluguel);
                    dispose();
                }    
            }else{
                JOptionPane.showMessageDialog(this, "Não obedeceu a quantidade de dias minimos do aluguel!");
            }
        }catch(ParseException pe){}    
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * Método que fecha a tela
     * @param evt seleção do botao "Cancelar".
     */
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        dispose();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * Método principal da classe ListaAlugueis
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaAlugueis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaAlugueis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaAlugueis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaAlugueis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaAlugueis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFormattedTextField jFormattedTextFieldData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldBusca;
    private javax.swing.JTextField jTextFieldDataAluguel;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTable tabelaAlugueis;
    // End of variables declaration//GEN-END:variables
}
