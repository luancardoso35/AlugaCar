import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Classe que apresenta uma tela para a remoção de funcionários do sistema, a partir 
 * de seu CPF
 * 
 * @author Luan
 * @author Matheo
 */
public class RemoverFuncionario extends javax.swing.JFrame {
    
    private ArrayList<Funcionario> listaCPF = new ArrayList<Funcionario>();
    private DefaultTableModel model;
    private boolean carregada = false;
    
    /**
     * Método que carrega a tabela com todos os funcionarios da lista "listaCPF", que
     * contém os funcionários que possuem CPF igual ao informado no campo de texto
     */
    private void carregarTabela()
    {
        DefaultTableModel localModel = (DefaultTableModel) tabelaBusca.getModel();
        
        for (Funcionario C : this.listaCPF)
        {
            Object[] row = new Object[4];
            row[0] = String.valueOf(C.getNome());
            row[1] = String.valueOf(C.getDocumento());
            localModel.addRow(row);
        }
    }
    
    /**
     * Método que esvazia a tabela apresentada
     */
    private void recarregarTabela()
    {
        DefaultTableModel localModel = (DefaultTableModel) tabelaBusca.getModel();
        localModel.setRowCount(0);
    }
    
    /**
     * Construtor da classe RemoverFuncionario
     * Creates new form BuscaCliente
     */
    public RemoverFuncionario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCPF = new javax.swing.JTextField();
        try{     javax.swing.text.MaskFormatter cpf= new javax.swing.text.MaskFormatter("###.###.###-##");     jTextFieldCPF = new javax.swing.JFormattedTextField(cpf);  }     catch (Exception e){  }
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaBusca = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(855, 484));
        setMinimumSize(new java.awt.Dimension(808, 459));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(808, 459));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(null);

        jLabel2.setText("CPF: ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 80, 120, 14);

        jTextFieldCPF.setBackground(new java.awt.Color(102, 102, 102));
        jTextFieldCPF.setBorder(null);
        jTextFieldCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCPFActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldCPF);
        jTextFieldCPF.setBounds(30, 100, 174, 22);

        jLabel3.setText("Insira o número do CPF, depois clique em Buscar");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(210, 10, 340, 14);

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(30, 170, 90, 40);

        tabelaBusca.setBackground(new java.awt.Color(102, 102, 102));
        tabelaBusca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "CPF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelaBusca.setGridColor(new java.awt.Color(102, 102, 102));
        jScrollPane1.setViewportView(tabelaBusca);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(350, 80, 390, 145);

        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(580, 270, 90, 30);

        jButton3.setText("Remover");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(400, 270, 100, 30);

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(30, 130, 180, 20);

        jPanel2.add(jPanel1);
        jPanel1.setBounds(30, 70, 750, 360);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Remover funcionários");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(310, 0, 180, 40);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(0, 0, 810, 40);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 855, 484);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que busca os funcionários na lista de funcionários que contém o CPF igual ao informado no
     * campo de texto, e os insere na lista "listaCPF"
     * @param evt ato de selecionar o botão "Buscar"
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (carregada == false) {
            for (int i = 0; i < ListaFuncionarios.listaFuncionarios.size(); i++)
            {
                if (jTextFieldCPF.getText().equals(ListaFuncionarios.listaFuncionarios.get(i).getDocumento()))
                {
                    listaCPF.add(ListaFuncionarios.listaFuncionarios.get(i));
                }
            }
            if (listaCPF.size() > 0) {
            carregarTabela();
            carregada = true;
            } else {
                JOptionPane.showMessageDialog(this, "Cliente não encontrado.");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Método que fecha a tela
     * @param evt ato de selecionar o botão "Voltar"
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * Método que remove o funcionário selecionado na tabela da lista de funcionários
     * @param evt ato de selecionar o botão "Remover"
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (tabelaBusca.getSelectedRow() >= 0)
        {
            for (int i = 0; i < ListaFuncionarios.listaFuncionarios.size(); i++)
            {
                if (jTextFieldCPF.getText().equals(ListaFuncionarios.listaFuncionarios.get(i).getDocumento()))
                {
                    ListaFuncionarios.listaFuncionarios.remove(ListaFuncionarios.listaFuncionarios.get(i));
                    listaCPF.remove(0);
                    jTextFieldCPF.setText("");
                    recarregarTabela();
                    JOptionPane.showMessageDialog(this, "Funcionário removido com sucesso!");
                    carregada = false;
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextFieldCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCPFActionPerformed

    }//GEN-LAST:event_jTextFieldCPFActionPerformed

    /**
     * Método principal da classe RemoverFuncionario
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoverCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoverCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoverCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoverCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RemoverCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldCPF;
    private javax.swing.JTable tabelaBusca;
    // End of variables declaration//GEN-END:variables
}
