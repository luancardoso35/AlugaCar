import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 * Classe que apresenta uma tela para a listagem de todos os carros contidos no sistema.
 * 
 * @author Luan
 * @author Matheo
 */
public class ListaCarros extends javax.swing.JFrame {
    
    protected static ArrayList<Carro> listaCarros = new ArrayList<Carro>();
    private DefaultTableModel model;
     
    /**
     * Método que insere na tabela os carros do sistema e suas respectivas informações.
     */
    private void carregarTabelaC()
    {
        DefaultTableModel localModel = (DefaultTableModel) tabelaCarros.getModel();
        DecimalFormat d = new DecimalFormat("#,##0.00");
        for (Carro objC : this.listaCarros)
        {
            Object[] row = new Object[5];
            row[0] = String.valueOf(objC.getMarca() + " - " + objC.getModelo());
            row[1] = String.valueOf(objC.getCor());
            row[2] = String.valueOf(objC.getRenavam());
            row[3] = String.valueOf(objC.getDiasMinimos());
            row[4] = String.valueOf("R$" + d.format(objC.getPrecoDiario()));
            
            localModel.addRow(row);
        }
    }

    /**
     * Construtor da classe ListaCarros
     * Creates new form ListaCarros
     */
    public ListaCarros() {
        model = new DefaultTableModel();
        tabelaCarros = new JTable(model);
        initComponents();
        carregarTabelaC();
    }
    
    /**
     * Método que inicializa os filtros utilizados.
     * @param busca fragmento de texto que será buscado.
     * @param coluna coluna na qual o fragmento será buscado.
     */
    private void filtro(String busca, int coluna){
        TableRowSorter<TableModel> trs = new TableRowSorter<>(tabelaCarros.getModel());
        tabelaCarros.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(busca, coluna));
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCarros = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldPreco = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldMinimo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldModelo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(700, 460));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(null);

        tabelaCarros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca / Modelo", "Cor", "Renavam", "Mínimo de Dias", "Preço Diário (R$)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaCarros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaCarrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaCarros);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 160, 640, 240);

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(590, 410, 79, 35);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Lista de Carros");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(280, 0, 130, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 700, 30);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setLayout(null);

        jTextFieldPreco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPrecoKeyReleased(evt);
            }
        });
        jPanel3.add(jTextFieldPreco);
        jTextFieldPreco.setBounds(500, 50, 100, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Preço:");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(500, 20, 40, 17);

        jTextFieldMinimo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMinimoKeyReleased(evt);
            }
        });
        jPanel3.add(jTextFieldMinimo);
        jTextFieldMinimo.setBounds(300, 50, 148, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("Número minimo de dias:");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(300, 20, 148, 17);

        jTextFieldCor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldCorKeyReleased(evt);
            }
        });
        jPanel3.add(jTextFieldCor);
        jTextFieldCor.setBounds(160, 50, 100, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Cor:");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(160, 20, 27, 17);

        jTextFieldModelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldModeloKeyReleased(evt);
            }
        });
        jPanel3.add(jTextFieldModelo);
        jTextFieldModelo.setBounds(30, 50, 90, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Modelo:");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(30, 20, 48, 17);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(30, 50, 640, 100);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Para alterar os parâmetros de aluguel de um carro, basta clicar em suas informações.");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(30, 410, 620, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 700, 460);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que fecha a tela.
     * @param evt ato de selecionar o botão "Voltar".
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Método que filtra as informações da tabela segundo o
     * modelo do carro, a partir do que é digitado no seu respectivo campo.
     * @param evt ato de começar a digitar algo no campo de texto referente ao modelo do carro.
     */
    private void jTextFieldModeloKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldModeloKeyReleased
        String modelo = jTextFieldModelo.getText();
        filtro(modelo, 0);
    }//GEN-LAST:event_jTextFieldModeloKeyReleased

    /**
     * Método que obtém a posição do carro na lista de carros
     * @param evt ato de selecionar uma das linhas da tabela
     */
    private void tabelaCarrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCarrosMouseClicked
        int index = tabelaCarros.getSelectedRow();
        OpcoesCarro oc = new OpcoesCarro();
        oc.setIndex(index);
        oc.setVisible(true);
        dispose();
    }//GEN-LAST:event_tabelaCarrosMouseClicked

    /**
     * Método que filtra as informações da tabela segundo a
     * cor do carro, a partir do que é digitado no seu respectivo campo.
     * @param evt ato de começar a digitar algo no campo de texto referente à cor do carro.
     */
    private void jTextFieldCorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCorKeyReleased
        String cor = jTextFieldCor.getText();        
        filtro(cor, 1);
        
    }//GEN-LAST:event_jTextFieldCorKeyReleased

    /**
     * Método que filtra as informações da tabela segundo o
     * número de dias mínimos para aluguel do carro, a partir do 
     * que é digitado no seu respectivo campo.
     * @param evt ato de começar a digitar algo no campo de texto referente ao número
     * mínimo de dias para aluguel do carro.
     */
    private void jTextFieldMinimoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMinimoKeyReleased
        String minimo = jTextFieldMinimo.getText();
        filtro(minimo, 3);
    }//GEN-LAST:event_jTextFieldMinimoKeyReleased

    /**
     * Método que filtra as informações da tabela segundo o
     * preço de aluguel diário do carro, a partir do que é digitado no seu respectivo campo.
     * @param evt ato de começar a digitar algo no campo de texto referente ao preço diário
     * do aluguel do carro.
     */
    private void jTextFieldPrecoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPrecoKeyReleased
        String preco = jTextFieldPreco.getText();        
        filtro(preco, 4);
    }//GEN-LAST:event_jTextFieldPrecoKeyReleased

    /**
     * Método principal da classe ListaCarros.
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaCarros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaCarros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaCarros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaCarros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaCarros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCor;
    private javax.swing.JTextField jTextFieldMinimo;
    private javax.swing.JTextField jTextFieldModelo;
    private javax.swing.JTextField jTextFieldPreco;
    private javax.swing.JTable tabelaCarros;
    // End of variables declaration//GEN-END:variables
}
